<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:pageModels="clr-namespace:ITSF_App.PageModels" 
             xmlns:models="clr-namespace:ITSF_App.Models" 
             xmlns:controls="clr-namespace:ITSF_App.Pages.Controls" 
             xmlns:pullToRefresh="clr-namespace:Syncfusion.Maui.Toolkit.PullToRefresh;assembly=Syncfusion.Maui.Toolkit" 
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit" 
             x:Class="ITSF_App.Pages.MainPage" 
             x:DataType="pageModels:MainPageModel" 
             Title="{Binding Today}">

    <!-- Defining behaviors for the ContentPage using EventToCommandBehavior to bind events to commands -->
    <ContentPage.Behaviors>
        <!-- Behavior for when the page is navigated to -->
        <toolkit:EventToCommandBehavior 
                EventName="NavigatedTo" 
                Command="{Binding NavigatedToCommand}" />
        
        <!-- Behavior for when the page is navigated from -->
        <toolkit:EventToCommandBehavior 
                EventName="NavigatedFrom" 
                Command="{Binding NavigatedFromCommand}" />
        
        <!-- Behavior for when the page is appearing -->
        <toolkit:EventToCommandBehavior 
                EventName="Appearing" 
                Command="{Binding AppearingCommand}" />
    </ContentPage.Behaviors>

    <!-- Declaring resources for the ContentPage, like converters -->
    <ContentPage.Resources>
        <ResourceDictionary>
            <!-- InvertedBoolConverter converts boolean values to the opposite (true becomes false and vice versa) -->
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Layout of the page wrapped inside a Grid -->
    <Grid>
        <!-- PullToRefresh component to allow users to refresh the content by pulling down -->
        <pullToRefresh:SfPullToRefresh 
            IsRefreshing="{Binding IsRefreshing}" 
            RefreshCommand="{Binding RefreshCommand}">
            
            <!-- Content that is scrollable and pullable for refresh -->
            <pullToRefresh:SfPullToRefresh.PullableContent>
                <ScrollView>
                    <!-- VerticalStackLayout contains the main content of the page -->
                    <VerticalStackLayout Spacing="{StaticResource LayoutSpacing}" Padding="{StaticResource LayoutPadding}">
                        
                        <!-- Category chart displayed at the top -->
                        <controls:CategoryChart />
                        
                        <!-- Label displaying the 'Projects' section title -->
                        <Label Text="Projects" Style="{StaticResource Title2}"/>

                        <!-- Horizontal scrollable list of projects -->
                        <ScrollView Orientation="Horizontal" Margin="-30,0">
                            <HorizontalStackLayout Spacing="15" Padding="30,0"
                                BindableLayout.ItemsSource="{Binding Projects}">
                                
                                <!-- Template for each item in the projects list -->
                                <BindableLayout.ItemTemplate>
                                    <DataTemplate x:DataType="models:Project">
                                        <!-- Project card for each project -->
                                        <controls:ProjectCardView WidthRequest="200">
                                            <controls:ProjectCardView.GestureRecognizers>
                                                <!-- Tap gesture to navigate to a project -->
                                                <TapGestureRecognizer Command="{Binding NavigateToProjectCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}" CommandParameter="{Binding .}" />
                                            </controls:ProjectCardView.GestureRecognizers>
                                        </controls:ProjectCardView>
                                    </DataTemplate>
                                </BindableLayout.ItemTemplate>
                            </HorizontalStackLayout>
                        </ScrollView>
                        
                        <!-- Section for displaying tasks -->
                        <Grid HeightRequest="44">
                            <!-- Label displaying 'Tasks' -->
                            <Label Text="Tasks" Style="{StaticResource Title2}" VerticalOptions="Center"/>
                            
                            <!-- Button to clean completed tasks (visible only if there are completed tasks) -->
                            <ImageButton 
                                Source="{StaticResource IconClean}" 
                                HorizontalOptions="End" 
                                VerticalOptions="Center" 
                                Aspect="Center" 
                                HeightRequest="44" 
                                WidthRequest="44" 
                                IsVisible="{Binding HasCompletedTasks}" 
                                Command="{Binding CleanTasksCommand}" />
                        </Grid>

                        <!-- Vertical list of tasks -->
                        <VerticalStackLayout Spacing="15" 
                            BindableLayout.ItemsSource="{Binding Tasks}">
                            <!-- Template for each task -->
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <!-- Task view for displaying each task -->
                                    <controls:TaskView TaskCompletedCommand="{Binding TaskCompletedCommand, Source={RelativeSource AncestorType={x:Type pageModels:MainPageModel}}, x:DataType=pageModels:MainPageModel}" />
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </VerticalStackLayout>
                    </VerticalStackLayout>
                </ScrollView>
            </pullToRefresh:SfPullToRefresh.PullableContent>
        </pullToRefresh:SfPullToRefresh>

        <!-- Button to add a new task, enabled only when the app is not busy -->
        <controls:AddButton 
            IsEnabled="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}}" 
            Command="{Binding AddTaskCommand}" />
    </Grid>
</ContentPage>